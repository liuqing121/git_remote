# Definition for singly-linked list.# class ListNode(object):#     def __init__(self, x):#         self.val = x#         self.next = Noneclass Solution(object):    def mergeKLists(self, lists):        """        :type lists: List[ListNode]        :rtype: ListNode        """        listlen = len(lists)        if listlen < 1:            return None        index = 1        while index < listlen:            for i in range(0, listlen - index, index * 2):    #0 1, 2 3, 4 5;                lists[i] = self.mergeTwoList(lists[i], lists[i + index])            index = index * 2        return lists[0]    def mergeTwoList(self,list1, list2):        if list1 == None:            return list2        if list2 == None:            return list1                if list1.val < list2.val:            list1.next = self.mergeTwoList(list1.next, list2)            return list1        else:            list2.next = self.mergeTwoList(list1, list2.next)            return list2